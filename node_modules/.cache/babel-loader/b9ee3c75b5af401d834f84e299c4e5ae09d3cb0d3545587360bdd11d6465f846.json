{"ast":null,"code":"import { rotateMatrix } from \"../components/tetris/helpers\";\nimport { settings } from \"../components/tetris/settings\";\nexport default class TetrominoModel {\n  constructor(column, row, index, name) {\n    this.matrix = void 0;\n    this.row = void 0;\n    this.column = void 0;\n    this.name = void 0;\n    this.rotate = rotation => {\n      const newMatrix = rotateMatrix(this.matrix, rotation);\n      return newMatrix;\n    };\n    this.matrix = TetrominoModel.getTetrominoesArray()[index];\n    this.row = row;\n    this.column = column;\n    this.name = name;\n  }\n  static getTetrominoesArray() {\n    return [[[0, 0, 0, 0], [0, 0, 0, 0], [1, 1, 1, 1], [0, 0, 0, 0]], [[0, 0, 0], [0, 2, 2], [2, 2, 0]], [[0, 0, 0], [3, 3, 0], [0, 3, 3]], [[4, 4], [4, 4]], [[0, 0, 0], [5, 5, 5], [0, 5, 0]], [[0, 0, 0], [6, 0, 0], [6, 6, 6]], [[0, 0, 0], [0, 0, 7], [7, 7, 7]]];\n  }\n  static getNumberOfTetrominoes() {\n    //there are 6 tetrominoes\n    return this.getTetrominoesArray().length;\n  }\n  move(direction) {\n    switch (direction) {\n      case \"DOWN\":\n        this.row = this.row + 1;\n        break;\n    }\n  }\n  collidesWith(board) {\n    for (let row = 0; row < this.matrix.length; row++) {\n      for (let column = 0; column < this.matrix.length; column++) {\n        if (this.matrix[row][column] !== 0) {\n          //board boundaries\n          if (row + this.row >= settings.rows || row + this.row <= 0 || column + this.column >= settings.columns || column + this.column < 0) {\n            return true;\n          }\n          //board is occuppied\n          if (board[row + this.row][column + this.column] !== 0) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n}","map":{"version":3,"names":["rotateMatrix","settings","TetrominoModel","constructor","column","row","index","name","matrix","rotate","rotation","newMatrix","getTetrominoesArray","getNumberOfTetrominoes","length","move","direction","collidesWith","board","rows","columns"],"sources":["/home/dreaminsub/ReactProjects/gameSharing/game_sharing/src/components/react-tetris/src/models/tetromino-model.tsx"],"sourcesContent":["import { rotateMatrix } from \"../components/tetris/helpers\";\nimport { settings } from \"../components/tetris/settings\";\ntype Direction = \"LEFT\" | \"RIGHT\" | \"DOWN\" | \"UP\";\ntype Rotation = \"LEFT\" | \"RIGTH\";\nexport default class TetrominoModel {\n  matrix: number[][];\n  row: number;\n  column: number;\n  name: string;\n\n  constructor(column: number, row: number, index: number, name: string) {\n    this.matrix = TetrominoModel.getTetrominoesArray()[index];\n    this.row = row;\n    this.column = column;\n    this.name = name;\n  }\n  static getTetrominoesArray() {\n    return [\n      [\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [1, 1, 1, 1],\n        [0, 0, 0, 0],\n      ],\n      [\n        [0, 0, 0],\n        [0, 2, 2],\n        [2, 2, 0],\n      ],\n      [\n        [0, 0, 0],\n        [3, 3, 0],\n        [0, 3, 3],\n      ],\n      [\n        [4, 4],\n        [4, 4],\n      ],\n      [\n        [0, 0, 0],\n        [5, 5, 5],\n        [0, 5, 0],\n      ],\n      [\n        [0, 0, 0],\n        [6, 0, 0],\n        [6, 6, 6],\n      ],\n      [\n        [0, 0, 0],\n        [0, 0, 7],\n        [7, 7, 7],\n      ],\n    ];\n  }\n  static getNumberOfTetrominoes(): number {\n    //there are 6 tetrominoes\n    return this.getTetrominoesArray().length;\n  }\n\n  move(direction: Direction) {\n    switch (direction) {\n      case \"DOWN\":\n        this.row = this.row + 1;\n        break;\n    }\n  }\n  rotate = (rotation: Rotation) => {\n    const newMatrix = rotateMatrix(this.matrix, rotation);\n    return newMatrix;\n  };\n  collidesWith(board: [][]): boolean {\n    for (let row = 0; row < this.matrix.length; row++) {\n      for (let column = 0; column < this.matrix.length; column++) {\n        if (this.matrix[row][column] !== 0) {\n          //board boundaries\n          if (\n            row + this.row >= settings.rows ||\n            row + this.row <= 0 ||\n            column + this.column >= settings.columns ||\n            column + this.column < 0\n          ) {\n            return true;\n          }\n          //board is occuppied\n          if (board[row + this.row][column + this.column] !== 0) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}