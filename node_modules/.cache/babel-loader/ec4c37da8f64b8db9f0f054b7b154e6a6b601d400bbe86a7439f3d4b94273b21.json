{"ast":null,"code":"var _jsxFileName = \"/home/dreaminsub/ReactProjects/gameSharing/game_sharing/src/components/gamesListRow.js\";\n// Import dependencies\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./../css/gamesList.css\";\n// Create GameshelfListRow component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameListRow = props => {\n  const {\n    position,\n    Game,\n    handleGameRemove\n  } = props;\n\n  // Handle cases where Game might be undefined\n  if (!Game) {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      className: \"table-row\",\n      children: /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"table-item\",\n        colSpan: \"6\",\n        children: \"Game data is not available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render the table row with Game details\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    className: \"table-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"table-item\",\n      children: position\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"table-item\",\n      children: Game.title || \"No Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"table-item\",\n      children: Game.author || \"No Author\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"table-item\",\n      children: Game.pubDate || \"No Publication Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"table-item\",\n      children: Game.rating || \"No Rating\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"table-item\",\n      children: Game.image || \"No image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"table-item\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: () => handleGameRemove(Game.id, Game.title),\n        children: \"Remove Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n// Define PropTypes for type checking\n_c = GameListRow;\nGameListRow.propTypes = {\n  position: PropTypes.number.isRequired,\n  Game: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    author: PropTypes.string,\n    pubDate: PropTypes.string,\n    rating: PropTypes.string,\n    image: PropTypes.any // image\n  }),\n  handleGameRemove: PropTypes.func.isRequired\n};\nexport { GameListRow };\nvar _c;\n$RefreshReg$(_c, \"GameListRow\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","GameListRow","props","position","Game","handleGameRemove","className","children","colSpan","fileName","_jsxFileName","lineNumber","columnNumber","title","author","pubDate","rating","image","onClick","id","_c","propTypes","number","isRequired","shape","string","any","func","$RefreshReg$"],"sources":["/home/dreaminsub/ReactProjects/gameSharing/game_sharing/src/components/gamesListRow.js"],"sourcesContent":["// Import dependencies\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./../css/gamesList.css\";\n// Create GameshelfListRow component\nconst GameListRow = (props) => {\n  const { position, Game, handleGameRemove } = props;\n\n  // Handle cases where Game might be undefined\n  if (!Game) {\n    return (\n      <tr className=\"table-row\">\n        <td className=\"table-item\" colSpan=\"6\">\n          Game data is not available\n        </td>\n      </tr>\n    );\n  }\n\n  // Render the table row with Game details\n  return (\n    <tr className=\"table-row\">\n      <td className=\"table-item\">{position}</td>\n\n      <td className=\"table-item\">{Game.title || \"No Title\"}</td>\n\n      <td className=\"table-item\">{Game.author || \"No Author\"}</td>\n\n      <td className=\"table-item\">{Game.pubDate || \"No Publication Date\"}</td>\n\n      <td className=\"table-item\">{Game.rating || \"No Rating\"}</td>\n\n      <td className=\"table-item\">{Game.image || \"No image\"}</td>\n\n      <td className=\"table-item\">\n        <button\n          className=\"btn btn-danger\"\n          onClick={() => handleGameRemove(Game.id, Game.title)}\n        >\n          Remove Game\n        </button>\n      </td>\n    </tr>\n  );\n};\n\n// Define PropTypes for type checking\nGameListRow.propTypes = {\n  position: PropTypes.number.isRequired,\n  Game: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    author: PropTypes.string,\n    pubDate: PropTypes.string,\n    rating: PropTypes.string,\n    image: PropTypes.any, // image\n  }),\n  handleGameRemove: PropTypes.func.isRequired,\n};\n\nexport { GameListRow };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}